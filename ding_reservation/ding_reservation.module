<?php

/**
 * Implementation of hook_menu().
 */
function ding_reservation_menu() {
  $items = array();

  $items['ding/reservation/%'] = array(
    'title' => 'Reserve item',
    'page callback' => 'ding_reservation_page_reserve_item',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'file' => 'ding_reservation.pages.inc',
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implementation of hook_ting_object_buttons().
 */
function ding_reservation_ting_object_buttons($object) {
  if (!empty($object->localId)) {
    // Leave out cart buttons for some record types.
    if (in_array($object->type, array('Tidsskrift', 'Artikel', 'Netdokument', 'Lydbog (online)'))) {
      return;
    }
    
    // TODO: Check if the user already reserved this item.
    drupal_add_js('$(function(){Drupal.tingButtons.dialogButton(".reserve-now");});', 'inline', 'footer', TRUE);
    return l(t('Reserve now'), 'ding/reservation/' . $object->localId, array('attributes' => array('class' => 'reserve-now')));
  }	
}

/**
 * Implementation of hook_requirements().
 */
function ding_reservation_requirements($phase) {
  $ret = array();
  
  if ($phase == 'runtime') {
    // Check whether any modules will support reservations.
    $reservation_hooks = array( 'ding_library_user_create_reservation' => t('creating'), 
                                'ding_library_user_update_reservation' => t('updating'), 
                                'ding_library_user_delete_reservation' => t('deleting'),
                                'ding_library_user_get_reservations' => t('listing'),
                                'ding_library_user_has_reservation' => t('checking for'));

    $supported_actions = array();
    $missing_actions = array();
    foreach ($reservation_hooks as $hook => $action_text) {
      if (count(module_implements($hook)) > 0) {
        $supported_actions[] = $action_text;
      } else {
        $missing_actions[] = $action_text;
      }
    }
    
    if (sizeof($missing_actions) > 0) {
      // Not all hooks are supported. Report a warning.
      $warning = array();
      $warning['title'] = t('Ding reservation');
      $warning['severity'] = REQUIREMENT_WARNING;
      $warning['value'] = t('Supported actions: @actions', array('@actions' => implode(', ', $supported_actions)));
      $warning['description'] = t('No enabled modules support @actions reservations.', array('@actions' => implode(', ', $missing_actions)));

      $ret[] = $warning;
    }
  }
  
  return $ret;
}

function ding_reservation_form_ding_cart_forms_cart_details_alter(&$form, &$form_state) {
  
  $form['pickup_branch'] = array(
    '#type'          => 'select',
    '#title'         => t('Pickup branch'),
    '#options'       => module_invoke_all('ding_library_get_reservation_branches'),
    '#default_value' => $account->preferred_branch,
  );

  $form['remove'] = array(
    '#type'       => 'submit',
    '#value'      => t('Remove selected'),
    '#attributes' => array('class' => 'remove-button'),
  );

  $form['reserve'] = array(
    '#type'       => 'submit',
    '#value'      => t('Reserve selected'),
    '#attributes' => array('class' => 'reserve-button'),
  );

}

