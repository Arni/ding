<?php

// Default interest period is ~six months.
define('DING_RESERVATION_DEFAULT_INTEREST_PERIOD', 183);
define('DING_RESERVATION_SUCCESS', 0);
define('DING_RESERVATION_ERROR', 1);
define('DING_RESERVATION_ERROR_NO_DEFAULT_BRANCH', 2);
define('DING_RESERVATION_ERROR_RESERVATION_EXISTS', 3);
define('DING_RESERVATION_ERROR_NOT_AVAILABLE', 4);
define('DING_RESERVATION_ERROR_NOT_ALLOWED', 5);

/**
 * Implementation of hook_menu().
 */
function ding_reservation_menu() {
  $items = array();

  $items['ding/reservation/%'] = array(
    'title' => 'Reserve item',
    'page callback' => 'ding_reservation_page_reserve_item',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'file' => 'ding_reservation.pages.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of hook_ting_object_buttons().
 */
function ding_reservation_ting_object_buttons($object) {
  if (!empty($object->localId)) {
    // Leave out reserve buttons for some record types.
    if (in_array($object->type, array('Tidsskrift', 'Artikel', 'Netdokument', 'Lydbog (online)'))) {
      return;
    }

    drupal_add_js(drupal_get_path('module', 'ding_reservation') . '/ding_reservation.buttons.js');
    return l(t('Reserve now'), 'ding/reservation/' . $object->localId, array('attributes' => array('class' => 'reserve-now')));
  }
}

/**
 * Implementation of hook_requirements().
 */
function ding_reservation_requirements($phase) {
  $requrements = array();
  if ($phase == 'runtime') {
    $reservation_provider = ding_provider_description('reservation');

    $requrements['ding_reservation'] = array(
      'title' => t('Ding reservation'),
      'severity' => $reservation_provider ? REQUIREMENT_INFO : REQUIREMENT_WARNING,
      'value' => $reservation_provider,
      'description' => $reservation_provider ? t('OK'): t('No reservation provider active.'),
    );
  }

  return $requrements;
}

/**
 * Implementation of hook_ctools_plugin_directory().
 *
 * Tells CTools (and thus Panels) where to look for plugin code.
 */
function ding_reservation_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' || $module == 'panels') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implementation of hook_theme().
 */
function ding_reservation_theme($existing, $type, $theme, $path) {
  return array(
    'ding_reservation_list_form' => array(
      'arguments' => array('form' => NULL),
      'file' => 'ding_reservation.theme.inc',
    ),
  );
}

/**
 * Reservation details form.
 *
 * @todo Way too much logic in the theme function. Move some of it here.
 */
function ding_reservation_list_form($form_state, $account, $records) {
  // TODO: Move this variable.
  $cancel_fetchable = (boolean) variable_get('ding_library_user_cancel_fetchable_reservable', TRUE);
  $form = array();

  $form['account'] = array(
    '#type' => 'value',
    '#value' => $account,
  );

  $form['reservations'] = array(
    '#type' => 'value',
    '#grouped' => array(),
    '#value' => array(),
  );

  foreach ($records as $reservation) {
    $form['reservations']['#value'][$reservation['id']] = $reservation;
    $form['reservations']['#grouped'][$reservation['status']][$reservation['id']] = $reservation;

    if ($reservation['status'] == 'active' || ($cancel_fetchable && $reservation['status'] == 'fetchable')) {
      $options[$reservation['id']] = '';
    }
  }

  $form['selected'] = array(
    '#type' => 'checkboxes',
    '#options' => $options,
  );

  return $form;
}
