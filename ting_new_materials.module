<?php

/**
 * @file
 * Enables listing the newest materials .
 */
include_once 'ting_new_materials.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types.
 */
function ting_new_materials_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implement hook_ctools_plugin_api().
 */
function ting_new_materials_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
  list($module, $api) = func_get_args();
  if ($module == "strongarm" && $api == "strongarm") {
    return array("version" => "1");
  }
}


/**
 * Implements hook_theme().
 */
function ting_new_materials_theme() {
  return array(
    'ting_new_materials' => array(
      'variables' => array('title' => NULL, 'number_of_results' => NULL, 'results' => NULL),
      'template'  => 'ting-new-materials',
    ),
  );
}


/**
 * Gets the post from the Data well
 * @param array $new_materials_node
 * The new_materials node descriping the new materials list
 */
function ting_new_materials_get_new_materials_posts($new_materials_node) {
  $page = pager_find_page();
  $num_per_page = variable_get('ting_new_materials_number_per_page', 10);
  
  $query = ting_new_materials_build_search_query($new_materials_node);

  $searchResult = ting_new_materials_do_search($query, $page, $num_per_page);
  $rendered_results = ting_new_materials_render_collection($searchResult->collections);

  pager_default_initialize($searchResult->numTotalObjects, $num_per_page);  
  return $rendered_results;
}


/**
 * Builds a search query string against the Data Well
 * @param object $new_materials_node
 * The new_materials node descriping the new materials list.
 * @return string $query
 * Search query string.
 */
function ting_new_materials_build_search_query($new_materials_node) {
  $query_field = field_get_items('node', $new_materials_node, 'field_ting_new_materials_search');
  $query = $query_field[0]['value'];
  $number_of_months_field = field_get_items('node', $new_materials_node, 'field_ting_new_materials_limit');
  $number_of_months = $number_of_months_field[0]['value']; 
  
  $query .= make_limit_query($number_of_months );
  $query = '(' . $query . ')';
  return $query;
}

/**
 * Helper function. Makes query part to limit the query.
 * @param int $number_of_months 
 * The number of months back to limit the results.  Min 1 and max 12 month. 0 means unlimited.
 */
function make_limit_query ($number_of_months = 0) { 
  $limit_query = "";
  if ($number_of_months > 0) {
    $date = date_create();
    $limit_query = ' AND sort.acquisitionDate=(' . date_format($date, 'Ym') . '*';
    for ($i = 1; $i <= $number_of_months; $i++) {
      date_sub($date, date_interval_create_from_date_string('1 month'));      
      $limit_query .= ' OR ' . date_format($date, 'Ym') . '*';
    }
    $limit_query .= ')';
  }
  return $limit_query;
}


/**
 * Renders a results object as a collection. We only search for single objects so every collection 
 * automatically becomes an object
 * @param array $collections
 * Array of collection object from the search
 * @return array $results
 * Array of rendered objects.
 */
function ting_new_materials_render_collection($collections) {
  $results = array();
  foreach ($collections as &$collection) {   
    $build = ting_collection_view($collection, 'teaser');
    $uri = entity_uri('ting_collection', $collection);
    $results[] = array(
      'link' => url($uri['path'], $uri['options']),
      'type' => '',
      'title' => $collection->title,
      'user' => '',
      'date' => '',
      'snippet' => drupal_render($build),
    );
  }
  return $results;
}

/**
 * Helper function. Performs a query against the Data Well and returns the objects
 * @param string @query
 * The query string
 * @param $page int
 * The page number
 * @return TingClientSearchResult
 * The search result
 * 
 */
function ting_new_materials_do_search($query, $page = 0, $num_per_page = 10) {
  $options    = array();
  module_load_include('client.inc', 'ting');
  
  $options['sort'] = 'acquisitionDate_descending';
  $options['enrich'] = TRUE;
  $options['collectionType'] = 'manifestation';
  try {
    $searchResult = ting_do_search($query, $page + 1, $num_per_page, $options);
    
  } catch (TingClientException $e) {
    watchdog('ting_new_materials', 'Failed to get objects from the Data well: “@message”', array('@message' => $e->getMessage(), WATCHDOG_ERROR));
    $searchResult = array();
  }
  drupal_static('ting_search_results', $searchResult);
  return $searchResult;
}




