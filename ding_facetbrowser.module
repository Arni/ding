<?php

/**
 * Implements hook_block_info()
 *
 * @return array
 */
function ding_facetbrowser_block_info() {
  $blocks['facetbrowser'] = array(
    'info'  => t('Facet browser'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_theme()
 *
 * @return array
 */
function ding_facetbrowser_theme() {
  return array(
   'facetbrowser' => array(
     'variables' => array(
       'facets'    => NULL,
       'searchkey' => NULL,
     ),
    ),
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types.
 */
function ding_facetbrowser_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implement hook_ctools_plugin_api().
 */
function ding_facetbrowser_ctools_plugin_api($module, $api) {
  if ($module == 'panels_mini' && $api == 'panels_default') {
    return array('version' => 1);
  }
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}
/**
 * Create a custom form with checkbox elements for facets and ajax callback
 *
 * @param array $form
 * @param array $form_state
 * @param array $facets
 * @return array $form
 */
function ding_facetbrowser_form($form, &$form_state, $facets = FALSE, $search = FALSE) {
  global $base_root;

  $checkboxes         = array();
  $default_values     = array();
  $form['search_key'] = array(
    '#type'  => 'hidden',
    '#value' => $search,
  );
  if (count($facets) == TRUE) {
    foreach ($facets as $facet) {
      if (count($facet) == TRUE) {
        $form[$facet->name] = array(
          '#type'        => 'fieldset',
          '#title'       => t($facet->name),
          '#attributes'  => array('id' => str_replace('.', '-', $facet->name), 'data' => array($facet->name)),
        );
      }
      if (is_object($facet) && count($facet->terms) == TRUE) {
        foreach ($facet->terms as $term_name => $term_count) {
          $facet_name             = explode('.', $facet->name);
          $element_name           = end($facet_name);
          $facets_string = $facet->name . ':' . $term_name;
          if (_isFacetSet($facet->name, $term_name) === TRUE) {
            $default_values[]       = $term_name;
            $facets_string = '-' . $facets_string;
          }
          $checkboxes[$term_name] = l($term_name,  $base_root . _parseRequestUri(), array(
            'html' => TRUE,
            'query' => array(
              'facets' => array('' => $facets_string),
            )
          ));

          $form[$facet->name][$element_name] = array(
            '#type'          => 'checkboxes',
            '#options'       => $checkboxes,
            '#default_value' => $default_values,
          );
        }
      }
      // Dont show empty facet categories
      elseif (!empty($facet->name) && array_key_exists($facet->name, $form)) {
        unset($form[$facet->name]);
      }

      // Reset previous set variables
      $checkboxes     = array();
      $default_values = array();
    }

  }

  return $form;
}

/**
 * Check if selected facet from url matches the one from params.
 *
 * @param String $term_cat
 * @param String $term_name
 * @return Boolean
 */

function _isFacetSet($term_cat, $term_name) {
  $facets = &drupal_static('ding_facetbrowser_facets');
  if (!isset($facets)) {
    $new_query_part = array();
    $request_uri_parts = explode('?', request_uri());
    $facets = explode('&', rawurldecode(end($request_uri_parts)));
    drupal_static('ding_facetbrowser_facets', $facets);
  }
  foreach ($facets as $facet) {
    if (stristr($facet, $term_cat . ':' . $term_name)) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Check the URI and drop pager parameter, if available.
 *
 * @return String
 */
function _parseRequestUri() {
  $new_query_part = array();
  if (stristr('?', request_uri())) {
    $request_uri_parts = explode('?', request_uri());

    $query = rawurldecode(end($request_uri_parts));
    $query_parts = explode('&', $query);
    foreach ($query_parts as $key => $part) {
      if (preg_match('/^page\=/', $part)) {
        unset($query_parts[$key]);
        continue;
      }
      $new_query_part[] = $part;
    }
    $query = $new_query_part;
    return $request_uri_parts[0] . '?' . implode('&', $query);
  }
  else {
    return request_uri();
  }
}

/**
 * Parse the selected facets from the $form_state to a readable string for the ting_search
 *
 * @param array $form_state
 * @return string
 */
function _facetString($form_state = NULL) {
  $facets = array();
  if (!empty($form_state['values']) && is_array($form_state['values'])) {
    foreach ($form_state['values'] as $name => $data) {
      if (is_array($data)) {
        foreach ($data as $key => $value) {
          if ($key == $value && $value !== 0) {
          $facets[] = 'facet.' . $name . ':' . $value;
          }
        }
      }
    }
  }
  return implode(';', $facets);
}

/**
 * facetbrowser theme function
 *
 * @param array $all_facets
 * @return string
 */
function theme_facetbrowser($search_result = FALSE) {
  $all_facets = array_shift($search_result);
  $searchkey = array_shift($search_result);
  $elements = array();
  if (is_array($all_facets)) {
    $form = drupal_get_form('ding_facetbrowser_form', $all_facets, $searchkey);
    $elements[] = drupal_render($form);
  }
  return implode('', $elements);
}

/**
 * Implements hook_block_view()
 *
 * @return Array
 */
function ding_facetbrowser_block_view($delta = FALSE) {
  $block                  = array();
  $block_content          = FALSE;
  $content_in_facet       = FALSE;
  $executed_search_module = FALSE;

  drupal_add_js(drupal_get_path('module', 'ding_facetbrowser') . '/js/facetbrowser.js');
  drupal_add_css(drupal_get_path('module', 'ding_facetbrowser') . '/css/facetbrowser.css');
  // TODO: Get the facetbrowser dom id automatic
  drupal_add_js(
    array('dingFacetBrowser' => array(
      'mainElement' => '.pane-ding-facetbrowser',
      'showCount' => 5)
    ), 'setting');


  // Invoke ding_facetbrowser() from executed search module
  $executed_search                = menu_get_item();
  if (!empty($executed_search['page_arguments'])) {
    list($executed_search_module, ) = $executed_search['page_arguments'];
  }
  if (is_string($executed_search_module)) {
    $results = module_invoke($executed_search_module, 'ding_facetbrowser');
    if (is_object($results)) {
      foreach ($results->facets as $result) {
        if (count($result->terms) == TRUE) {
          $content_in_facet = TRUE;
          break;
        }
      }
      if ($content_in_facet === TRUE || $results->show_empty == TRUE) {
        $block_content = theme('facetbrowser', array($results->facets, (!empty($results->searchkey) ? $results->searchkey : NULL)));
      }
    }
    switch ($delta) {
    case 'facetbrowser':
      $block['subject'] = t('Facet browser');
      $block['content'] = $block_content;
      break;
    }
  }

  return $block;
}

