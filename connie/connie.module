<?php

/**
 * @file
 * Helper module for the Ding provider tests.
 *
 * The module defines
 * - an availability provider
 * - an user provider
 *
 */

/**
 * Implement hook_ding_provider().
 */
function connie_ding_provider() {
  return array(
    'title' => 'Connie: Ding provider example',
    'provides' => array(
      'availability' => array(
        'prefix' => 'availability',
      ),
      'user' => array(
        'prefix' => 'user',
        'file' => drupal_get_path('module', 'connie') . '/connie.user.inc',
      ),
      'reservation' => array(
        'prefix' => 'reservation',
        'file' => drupal_get_path('module', 'connie') . '/connie.reservation.inc',
      ),
      'loan' => array(
        'prefix' => 'loan',
        'file' => drupal_get_path('module', 'connie') . '/connie.loan.inc',
      ),
    ),
  );
}

function connie_availability_items($provider_ids) {
  $res = array();
  foreach ($provider_ids as $id) {
    $res[$id] = array(
      'available' => (bool) (($id%2) == 0),
      'reservable' => (bool) (((int)($id/10)%2) == 0),
    );
    // This is a periodical.
    if ($id == '06078362') {
      $res[$id]['issues'] = array(
        '2011' => array(
          '1' => array(
            'available' => FALSE,
            'reservable' => FALSE,
          ),
          '2' => array(
            'available' => TRUE,
            'reservable' => TRUE,
          ),
        ),
        '2010' => array(
          '2' => array(
            'available' => TRUE,
            'reservable' => FALSE,
          ),
          '1' => array(
            'available' => TRUE,
            'reservable' => FALSE,
          ),
        ),
      );
    }
  }
  return $res;
}

/**
 */
function connie_availability_holdings($provider_ids) {
  // Holdings is a superset of items.
  $res = connie_availability_items($provider_ids);
  foreach ($res as $id => &$availability) {
    if (((int)($id/100)%2) == 0) {
      $availability['holdings'] = array(
        'Andeby bibliotek',
        'Gåserød bibliotek',
      );
    }
    else {
      $availability['holdings'] = array();
    }
  }

  return $res;
}

/**
 *
 */
function connie_availability_periodical($provider_ids) {
  $res = array();
  foreach ($provider_ids as $id) {
    $res[$id] = array(
      '2011' => array(
        '1' => array(
          'available' => FALSE,
          'reservable' => FALSE,
        ),
        '2' => array(
          'available' => TRUE,
          'reservable' => TRUE,
        ),
      ),
      '2010' => array(
        '1' => array(
          'available' => TRUE,
          'reservable' => FALSE,
        ),
        '2' => array(
          'available' => TRUE,
          'reservable' => FALSE,
        ),
      ),
    );
  }
  return $res;
}
