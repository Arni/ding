<?php
/**
 * @file
 * Implements the search auto-complete functions to the ting search field by
 * using open search.
 */

/**
 * Implements hook_menu().
 */
function ting_search_autocomplete_menu() {
  $items = array();

  $items['ting/autocomplete'] = array(
    'title' => 'Ting search autocomplete',
    'description' => 'Returns a list of suggestions to use for autocompletion',
    'access arguments' => array('search content'),
    'page callback' => 'ting_search_autocomplete',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_flush_caches().
 */
function ting_search_autocomplete_flush_caches() {
  return array('cache_ting_search_autocomplete');
}

/**
 * Implements hook_form_alter().
 *
 * Adds CSS and JS to the ting search form.
 */
function ting_search_autocomplete_form_search_block_form_alter(&$form, &$form_state) {
  $form['search_block_form']['#autocomplete_path'] = 'ting/autocomplete';
  $form['search_block_form']['#attached']['css'] = array(
    drupal_get_path('module', 'ting_search_autocomplete') . '/css/ting_search_autocomplete.css',
  );
}

function ting_search_autocomplete($string = '', $reset = FALSE) {
  $matches = array();

  // Try to use cache for the search string.
  $cid = md5($string);
  if (!$reset && $cache = cache_get($cid, 'cache_ting_search_autocomplete')) {
    $matches = $cache->data;
  }
  else {
    require_once drupal_get_path('module', 'ting') . '/ting.client.inc';

    // Scan for search results.
    $scan_results = ting_do_scan($string, 'anyIndexes', 10);

    // Sort based on count.
    uasort($matches, 'ting_search_autocomplete_term_sort');

    if ($scan_results instanceof TingClientScanResult) {
      foreach ($scan_results->terms as $term) {
        $matches[strtolower($term->name)] = $term->name;
      }
      $matches = array_reverse($matches);
    }

    // Scan for spell suggestions.
    $spell_suggestions = ting_get_spell_suggestions($string, 3);
    if ($spell_suggestions) {
      foreach ($spell_suggestions as $spell_word) {
        if (strtolower($spell_word->word) == strtolower($string)) {
          continue;
        }
        $matches[$spell_word->word] = t("Did you mean '@query' ?", array('@query' => $spell_word->word));
      }
    }

    foreach ($matches as $key => $match) {
      $key = ting_search_autocomplete_substr_word_bondary($key);
      $matches[$key] = $match;
    }

    cache_set($cid, $matches, 'cache_ting_search_autocomplete', CACHE_TEMPORARY);
  }

  drupal_json_output($matches);
}


function ting_search_autocomplete_term_sort($t1, $t2) {
  if ($t1->count > $t2->count) {
    return 1;
  }
  elseif ($t2 > $t1->count) {
    return -1;
  }

  return 0;
}

function ting_search_autocomplete_substr_word_bondary($text, $max = 128) {
  global $multibyte;
  $strlen = drupal_strlen($text);

  if ($strlen <= $max) {
    return $text;
  }
  else {
    if ($multibyte == UNICODE_MULTIBYTE) {
      if (mb_strpos($text, ' ', $max) == $max + 1) {
        $lastspace = $max;
      }
      else {
        $lastspace = mb_strrpos($text, ' ', $max - $strlen);
      }
    }
    else {
      if (strpos($text, ' ', $max) == $max + 1) {
        $lastspace = $max;
      }
      else {
        $lastspace = strrpos($text, ' ', $max - $strlen);
      }
    }

    return drupal_substr($text, 0, $lastspace);
  }
}
