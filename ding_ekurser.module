<?php
/**
 * @file
 * Code for the Ding eKurser feature.
 */

// Path of panel page. Remember to change this constant if the panel changes.
define('DING_EKURSER_PATH', 'ekurser');

include_once 'ding_ekurser.features.inc';

/**
 * Implements hook_form_alter().
 *
 * Set search type to 'film (net)' and hide facet type from facet browser.
 * Also hide certain fields via css.
 */
function ding_ekurser_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id != 'ding_facetbrowser_form' || strpos($form['#action'], '/' . DING_EKURSER_PATH) !== 0) {
    return;
  }

  drupal_add_css(drupal_get_path('module', 'ding_ekurser') . '/ding_ekurser.css', 'file');
}

/**
 * Parse request uri and remove unwanted elements such as page and facets.
 *
 * This function is copied from ding_facetbrowser and modified.
 *
 * @return array
 *   Return pair of uri and found facet.subject if any.
 */
function _ding_ekurser_facetbrowser_parse_request_uri() {
  $current_term = '';
  $new_query_part = array();
  if (stristr(request_uri(), '?')) {
    $request_uri_parts = explode('?', request_uri());

    $query = rawurldecode(end($request_uri_parts));
    $query_parts = explode('&', $query);
    foreach ($query_parts as $key => $part) {
      if (preg_match('/^page\=/', $part)) {
        unset($query_parts[$key]);
        continue;
      }
      elseif (preg_match('/^facets\[\d*\]\=/', $part)) {
        $match = array();
        unset($query_parts[$part]);
        if (preg_match('/^facets\[\d*\]\=facet\.subject:(.*)/', $part, $match)) {
          $current_term = $match[1];
        }
        continue;
      }
      $new_query_part[] = $part;
    }
    $query = $new_query_part;
    return array(
      $request_uri_parts[0] . '?' . implode('&', $query),
      $current_term,
    );
  }
  else {
    return array(request_uri(), $current_term);
  }
}

/**
 * Remove terms that have a count of 80% or more of total count.
 *
 * @param int $total_count
 *   Total count.
 * @param array $terms
 *   Array of term => count.
 *
 * @return array
 *   Return terms
 */
function _ding_ekurser_remove_terms($total_count, $terms = array()) {
  foreach ($terms as $term => $count) {
    if ($count >= (0.8 * $total_count)) {
      unset($terms[$term]);
    }
  }
  return $terms;
}

/**
 * Implements hook_search_info().
 */
function ding_ekurser_search_info() {
  return array(
    'title' => t('Ding eKurser'),
    'conditions_callback' => 'ding_ekurser_conditions_callback',
  );
}

/**
 * Implements hook_search_execute().
 *
 * We don't make our own search, but call ting_search.
 */
function ding_ekurser_search_execute($keys = NULL, $conditions = NULL) {
  return ting_search_search_execute($keys, $conditions);
}

/**
 * Search conditions callback.
 *
 * Use ting_search's conditions callback and add default sort.
 */
function ding_ekurser_conditions_callback($keys) {
  $conditions = ting_search_conditions_callback($keys);
  if (empty($conditions['sort'])) {
    $conditions['sort'] = 'acquisitionDate_descending';
  }
  return $conditions;
}

/**
 * Set default sort options.
 *
 * @return array
 *   Returns an array of sort options.
 */
function ding_ekurser_search_sort_options() {
  $options = array(
    'title_ascending' => t('Title (Ascending)'),
    'title_descending' => t('Title (Descending)'),
    'acquisitionDate_ascending' => t('Acquisition date (Ascending)'),
    'acquisitionDate_descending' => t('Acquisition date (Descending)'),
  );

  // Add label to the front of the options.
  foreach ($options as $key => $option) {
    $options[$key] = t('Sort by: !sort', array('!sort' => $option));
  }

  return $options;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Change sort options when we're on the overview of eKurser.
 */
function ding_ekurser_form_ting_search_sort_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form['#action'], '/' . DING_EKURSER_PATH) !== 0) {
    return;
  }

  // Set our own sorting options and set default sort, if it's not set.
  $form['sort']['#options'] = ding_ekurser_search_sort_options();
  if (empty($form['sort']['#default_value'])) {
    $form['sort']['#default_value'] = 'acquisitionDate_descending';
  }
}
