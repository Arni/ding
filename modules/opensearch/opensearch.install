<?php

/**
 * Implements hook_install().
 */
function opensearch_install() {
  opensearch_migrate_settings();
}

/**
 * Rename old ting variables to opensearch scope.
 */
function opensearch_migrate_settings() {
  $settings_map = array(
    'ting_search_url' => 'opensearch_url',
    'ting_use_auth' => 'opensearch_use_auth',
    'ting_auth_name' => 'opensearch_auth_name',
    'ting_auth_pass' => 'opensearch_auth_pass',
    'ting_auth_group' => 'opensearch_auth_group',
    'ting_recommendation_url' => 'opensearch_recommendation_url',
    'ting_enable_logging' => 'opensearch_enable_logging',
    'ting_cache_lifetime' => 'opensearch_cache_lifetime',
    'ting_search_autocomplete_suggestion_url' => 'opensearch_search_autocomplete_suggestion_url',
    'ting_search_autocomplete_method' => 'opensearch_search_autocomplete_method',
  );

  array_walk($settings_map, function($new_var, $old_var) {
    variable_set($new_var, variable_get($old_var));
    variable_del($old_var);
  });

  // Keep minimumString in ting_search_autocomplete_settings.
  // Move the rest to opensearch_search_autocomplete_settings.
  $ting_autocomplete_settings = variable_get('ting_search_autocomplete_settings');
  $opensearch_search_autocomplete_settings = array();

  if (is_array($ting_autocomplete_settings)) {
    foreach ($ting_autocomplete_settings as $key => $value) {
      if ($key !== 'minimumString') {
        unset($ting_autocomplete_settings[$key]);
        $opensearch_search_autocomplete_settings[$key] = $value;
      }
    }

    variable_set('ting_autocomplete_settings', $ting_autocomplete_settings);
    variable_set('opensearch_search_autocomplete_settings', $ting_autocomplete_settings);
  }
}
