<?php
/**
 * @file
 * Availability information for ding objects.
 */

/**
 * Implements hook_menu().
 */
function ding_availability_menu() {
  $items['ding_availability/item'] = array(
    'title' => 'Availability status',
    'page callback' => 'ding_availability_js',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['ding_availability/holdings'] = array(
    'title' => 'Availability and holding status',
    'page callback' => 'ding_availability_holdings_js',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_ding_provider_user().
 */
function ding_availability_ding_provider_user() {
  return array(
    'availability' => array(
      'required' => TRUE,
      'install time setup' => TRUE,
    ),
  );
}

/**
 *
 */
function ding_availability_js($provider_ids) {
  drupal_json_output(ding_availability_items(explode(',', $provider_ids)));
}

/**
 *
 */
function ding_availability_holdings_js($provider_ids) {
  drupal_json_output(ding_availability_holdings(explode(',', $provider_ids)));
}

/**
 *
 */
function ding_availability_items($provider_ids) {
  if (ding_provider_implements('availability', 'items')) {
    $items = ding_provider_invoke('availability', 'items', $provider_ids);
    if (!$items) {
      return array();
    }
    foreach ($items as &$item) {
      $item += array(
        'reservable' => FALSE,
        'available' => FALSE,
      );
      _ding_availability_text($item);
    }
  }
  else {
    $items = ding_availability_holdings($provider_ids);
  }

  return $items;
}

/**
 *
 */
function ding_availability_holdings($provider_ids) {
  $items = ding_provider_invoke('availability', 'holdings', $provider_ids);
  if (!$items) {
    return array();
  }
  foreach ($items as &$item) {
    $item += array(
      'reservable' => FALSE,
      'available' => FALSE,
      'holdings' => array(),
    );
    _ding_availability_text($item);
  }

  return $items;
}

/**
 * Implements hook_entity_view().
 */
function ding_availability_ding_entity_view($entity, $view_mode, $langcode = NULL) {
  $entity->content['overview']['right'] = array(
    '#markup' => '<div class="availability availability-' . $entity->provider_id. '"></div>',
    '#weight' => 10,
    '#attached' => array(
      'js' => array(
        drupal_get_path('module', 'ding_availability') . '/ding_availability.js' => array(
          'type' => 'file',

        ),
        array('data' => array('ding_availability_mode' => ($view_mode == 'full' ? 'holdings' : 'items'), 'ding_availability' => array($entity->provider_id => array('availability-' . $entity->provider_id))), 'type' => 'setting'),
      ),
      'css' => array(
        drupal_get_path('module', 'ding_availability') . '/ding_availability.css'
      ),
    ),
  );

  if ($view_mode == 'full') {
    $entity->content['holdings'] = array(
      '#markup' => '<div class="holdings holdings-' . $entity->provider_id. '"></div>',
      '#weight' => 10,
    );
  }
}

/**
 * Adds the human readable status text of an item.
 */
function _ding_availability_text(&$item) {
  if ($item['available'] && $item['reservable']) {
    $item['status'] = t('available');
  }
  elseif (!$item['available'] && $item['reservable']) {
    $item['status'] = t('on loan');
  }
  elseif ($item['available'] && !$item['reservable']) {
    $item['status'] = t('available');
  }
  elseif (!$item['available'] && !$item['reservable']) {
    $item['status'] = t('unavailable');
  }
}
