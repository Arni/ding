<?php

/**
 * @file
 * Interface module for talking with the materials backend.
 */

/**
 *
 */
function ding_entity_load($id) {
  if ($type = ding_entity_type()){
    return reset(entity_load($type, FALSE, array('ding_entity_id' => array($id))));
  }
  return FALSE;
}

function ding_entity_type() {
  $type = &drupal_static(__FUNCTION__);
  if (is_null($type)) {
    $types = module_invoke_all('ding_entity_types');
    if (isset($types['ding_entity'])) {
      $type = $types['ding_entity'];
      return $type;
    }
    // None found, flag it.
    $type = FALSE;
  }
  return $type;
}

function ding_entity_collection_load($id) {
  if ($type = ding_entity_collection_type()){
    return reset(entity_load($type, FALSE, array('ding_entity_collection_id' => array($id))));
  }
  return FALSE;
}

function ding_entity_collection_type() {
  $type = &drupal_static(__FUNCTION__);
  if (is_null($type)) {
    $types = module_invoke_all('ding_entity_types');
    if (isset($types['ding_entity_collection'])) {
      $type = $types['ding_entity_collection'];
      return $type;
    }
    // None found, flag it.
    $type = FALSE;
  }
  return $type;
}

/**
 * Base class for Ding entity types.
 *
 * Do not extend this class, use one of the subclasses in this file.
 */
class DingEntityBase {
  protected $properties = array('id' => FALSE);

  public function __get($prop) {
    if (isset($this->properties[$prop])) {
      if (isset($this->$prop)) {
        return $this->$prop;
      } elseif (($method = 'get' . strtoupper($prop[0]) .  substr($prop, 1)) &&
        method_exists($this, $method)) {
        return call_user_func(array($this, $method));
      }
    }

    $trace = debug_backtrace();
    trigger_error('Undefined property via __get(): ' . $prop .
      ' in ' . $trace[0]['file'] .
      ' on line ' . $trace[0]['line'],
      E_USER_NOTICE);

    return NULL;
  }

  function getId() {
    return $this->id = $this->ding_entity_id;
  }
}

abstract class DingEntity extends DingEntityBase {
  function __construct() {
    $this->properties += array('title' => FALSE, 'creator' => FALSE, 'abstract' => FALSE);
  }
}

abstract class DingEntityCollection extends DingEntityBase {
  function __construct() {
    $this->properties += array('entities' => FALSE);
  }
}
