<?php
// $Id$

/**
 * @file library_slug.module
 * Handles the generation and loading of nodes from "slugs", 
 * small bits of text, suitable for use in URLs.
 */

/**
 * Implementation of hook_ctools_arguments().
 */
function library_slug_ctools_arguments() {
  $args = array();
  $args['library_slug'] = array(
    'title' => t('Library slug'),
    'keyword' => 'node', // TODO: What is this?
    'description' => t('Finds the node context based on the "slug" name for a library.'),
    'context' => 'library_slug_library_context',
  );
  return $args;
}

/**
 * Lookup an argument to see if it corresponds to a library.
 */
function library_slug_library_context($arg = NULL, $conf = NULL, $empty = FALSE) {
  // If unset it wants a generic, unfilled context.
  if ($empty) {
    return ctools_context_create_empty('node');
  }

  // We can accept either a node object or a pure nid.
  if (is_object($arg)) {
    return ctools_context_create('node', $arg);
  }

  $nid = db_result(db_query("SELECT nid FROM {library_slug} WHERE slug='%s'", $arg));
  if (!$nid || !is_numeric($nid)) {
    return FALSE;
  }

  $node = node_load($nid);
  if (!$node) {
    return FALSE;
  }

  return ctools_context_create('node', $node);
}

