<?php
// $Id: field.test,v 1.47 2010/12/15 04:13:48 webchick Exp $

/**
 * @file
 *
 * Test that the provider catches DingProviderAuthException and redirects to
 * login.
 */

class DingProviderLoginTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Ding provider login',
      'description' => 'Ensure that provider redirects to login when necessary.',
      'group' => 'Ding! provider',
    );
  }

  function setUp() {
    $this->profile = 'ding2';
    parent::setUp(array('ding_provider', 'dp_example', 'ding_user', 'ding_provider_login_test', 'ding_user_test'));
  }

  /**
   * Test that ding_provider_invoke_page() handles things as it should.
   */
  public function testPageAuthenticate() {
    $login_data = array('name' => 'twain', 'pass' => 'wain');

    // First log in.
    $this->drupalPost('user/login', $login_data, t('Log in'));
    $this->assertRaw(t('Member for'), t("Login works."));

    $this->drupalGet('ding_provider_login_test/authpage');
    $this->assertText('Wolla!', t("Provider callback works when logged in."));

    $this->drupalGet('ding_user_test/expirecreds');
    $this->drupalGet('ding_provider_login_test/authpage');
    $this->assertText('Enter your Drupal username.', t("We're asked to authenticate ourselves."));

    $this->drupalPost(NULL, $login_data, t('Log in'));
    $this->assertText('Wolla!', t("Provider callback works after logging in."));
  }

  /**
   * Test that ding_provider_get_form() handles things properly.
   */
  function testFormAuthenticate() {
    $login_data = array('name' => 'twain', 'pass' => 'wain');

    $this->drupalGet('ding_provider_login_test/authform/form');
    $this->assertNoText('Enter a string', t("Form doesn't work when not logged in."));
    $this->assertText(t('Enter the password that accompanies your username.'), t("We're asked to log in."));

    // Log in.
    $this->drupalPost(NULL, $login_data, t('Log in'));
    $this->assertText(t('Enter a string'), t("Form display works after login."));

    $this->drupalGet('ding_provider_login_test/authform/form');
    $this->assertText(t('Enter a string'), t("Form display works when logged in."));

    $this->drupalPost(NULL, array('a_field' => 'Wolla'), t('Say it'));
    $this->assertText('Wolla', t("Form submission works when logged in."));

    $this->drupalGet('ding_user_test/expirecreds');

    $this->drupalGet('ding_provider_login_test/authform/form');
    $this->assertText(t('Enter the password that accompanies your username.'), t("Form redirects to authenticate when not authenticated."));

    $this->drupalPost(NULL, $login_data, t('Log in'));
    $this->assertText(t('Enter a string'), t("Form display works after authentication."));

    $this->drupalGet('ding_user_test/expirecreds');

    $this->drupalGet('ding_provider_login_test/authform/submit');
    $this->assertText(t('Enter a string'), t("Form display still works."));

    $this->drupalPost(NULL, array('a_field' => 'Wolla'), t('Say it'));
    $this->assertText(t('Enter the password that accompanies your username.'), t("Form submit redirects to authenticate when not authenticated."));

    $this->drupalPost(NULL, $login_data, t('Log in'));
    $this->assertText('Wolla', t("Form submission works when authenticated.."));
  }
}

class DingProviderAjaxLoginTestCase extends AJAXTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Ding provider ajax login',
      'description' => 'Ensure that provider handles ajax requests when necessary.',
      'group' => 'Ding! provider',
    );
  }

  function setUp() {
    $this->profile = 'ding2';
    parent::setUp(array('ding_provider', 'dp_example', 'ding_user', 'ding_provider_login_test', 'ding_user_test'));
  }

  /**
   * Fudge ajax page.
   *
   * drupalPostAJAX requires that the form being posted is represented in the
   * content of the current page. However, as it doesn't know what to do with
   * our custom ajax commands, it doesn't insert the form in the content, so
   * we do it ourselves here.
   */
  function fudge($commands) {
    // DOM can load HTML soup. But, HTML soup can throw warnings, suppress
    // them.
    $dom = new DOMDocument();
    @$dom->loadHTML($this->content);
    foreach ($commands as $command) {
      switch ($command['command']) {
        case 'ding_user_authenticate':
          $xpath = new DOMXPath($dom);
          $wrapperNode = $xpath->query('//body')->item(0);

          $newDom = new DOMDocument();
          $newDom->loadHTML('<div class="ding_user_authenticate_test">' . $command['data'] . '</div>');
          $newNode = $dom->importNode($newDom->documentElement->firstChild, TRUE);
          $wrapperNode->appendChild($newNode);
          break;
        case 'ding_user_authenticate_close':
          $xpath = new DOMXPath($dom);
          $popups = $xpath->query('//*[@class=ding_user_authenticate_close]');
          foreach ($popups as $popup) {
            $popup->parentNode()->removeChild($popup);
          }

          break;
      }
    }
    $this->content = $dom->saveHTML();
  }

  /**
   * Test that ajax callback handles things properly.
   */
  function testFormAuthenticate() {
    $login_data = array('name' => 'twain', 'pass' => 'wain');

    $this->drupalGet('ding_provider_login_test/authajaxform/ajax');
    $this->assertText('Enter a string', t("Form display works when not logged in."));

    $commands = $this->drupalPostAJAX(NULL, array('b_field' => 'test'), array('op' => t('Say it')));
    $expected = array(
      'command' => 'ding_user_authenticate',
      'form_id' => 'ding_provider_login_test_ajax_form',
    );
    $this->assertCommand($commands, $expected, "We get a login form.");

    $this->fudge($commands);
    $commands = $this->drupalPostAJAX(NULL, $login_data, array('op' => t('Log in')), NULL, array(), array(), 'ding-user-authenticate-form');

    // Check that we can't authenticate (we're not logged in at all).
    $expected = array(
      'command' => 'insert',
      'data' => '<div class="messages error">
<h2 class="element-invisible">Error message</h2>
Sorry, authentication failed, did you type the right username and password?</div>
',
    );
    $this->assertCommand($commands, $expected, "We can't authenticate when not logged in.");

     // Log in.
    $this->drupalPost('user/login', $login_data, t('Log in'));
    $this->assertRaw(t('Member for'), t("Login works."));

    $this->drupalGet('ding_provider_login_test/authajaxform/ajax');
    $this->assertText(t('Enter a string'), t("Form display works after login."));

    $commands = $this->drupalPostAJAX(NULL, array('b_field' => 'Willa'), array('op' => t('Say it')));
    $expected = array(
      'command' => 'insert',
      'data' => 'Willa'
    );
    $this->assertCommand($commands, $expected, "Ajax works when logged in.");

    $this->drupalGet('ding_user_test/expirecreds');

    $this->drupalGet('ding_provider_login_test/authajaxform/ajax');
    $this->assertText('Enter a string', t("Form display works when logged in but not authenticated."));

    $commands = $this->drupalPostAJAX(NULL, array('b_field' => 'Wolla'), array('op' => t('Say it')));
    $expected = array(
      'command' => 'ding_user_authenticate',
      'form_id' => 'ding_provider_login_test_ajax_form',
    );
    $this->assertCommand($commands, $expected, "We get a login form.");

    $this->fudge($commands);
    $commands = $this->drupalPostAJAX(NULL, $login_data, array('op' => t('Log in')), NULL, array(), array(), 'ding-user-authenticate-form');

    $expected = array(
      'command' => 'ding_user_authenticate_close',
    );
    $this->assertCommand($commands, $expected, "We authenticated.");

    // ding_user_authenticate_close triggers reposting, we do it by hand.
    $commands = $this->drupalPostAJAX('ding_provider_login_test/authajaxform/ajax?dp_form_id=ding_provider_login_test_ajax_form', array('b_field' => 'Wolla'), array('op' => t('Say it')));

    $expected = array(
      'command' => 'insert',
      'data' => 'Wolla',
    );
    $this->assertCommand($commands, $expected, "Ajax callback ran.");
  }
}