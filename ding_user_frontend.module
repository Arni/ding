<?php
/**
 * @file
 * Code for the Ding User Frontend feature.
 */

/**
 * Implements hook_block_info().
 */
function ding_user_frontend_block_info() {
  $blocks = array();

  $blocks['ding-username'] = array(
    'info' => t('Ding user name'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['ding-user-loan-number'] = array(
    'info' => t('Ding loan, reservation, and debt count'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['ding-user-ajax-login'] = array(
    'info' => t('Login ajax button'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_theme().
 */
function ding_user_frontend_theme($existing, $type, $theme, $path) {
  return array(
    'ding_user_frontend_user_name' => array(
      'variables' => array('account' => NULL, 'name' => NULL),
      'template' => 'ding_user_frontend_user_name',
      'path' => $path . '/templates',
    ),
    'ding_user_frontend_user_status' => array(
      'variables' => array('status' => array()),
      'template' => 'ding_user_frontend_user_status',
      'path' => $path . '/templates',
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function ding_user_frontend_block_view($delta) {
  $block = array();
  global $user;

  switch ($delta) {
    case 'ding-username':
      if ($user->uid > 0) {
        $name = (!empty($user->data['display_name'])) ? $user->data['display_name'] : $user->name;

        if (!empty($name)) {
          $block['content'] = theme('ding_user_frontend_user_name', array(
            'account' => $user,
            'name' => $name,
          ));
        }
      }
      break;

    case 'ding-user-loan-number':
      try {
        // We don't really need the credentials here, but getting them
        // causes an exception to be thrown if user is not
        // authenticated, exiting this block of code, which is what we
        // want. No credentials, no user status. (The creds are store in the
        // session, so it's a fast check, where ding_user_is_provider_user would
        // use the database.)
        ding_user_get_creds($user);

        // Define the types of information that the provider should be queried
        // for and their labels.
        $types = array(
          'loan' => t('Loans'),
          'reservation' => t('Reservation'),
          'debt' => t('Debts'),
        );

        $content = array();
        foreach ($types as $type => $label) {
          if (ding_provider_implements($type, 'list')) {
            $count = count(ding_provider_invoke_page($type, 'list', $user));
            if ($count) {
              $content[] = array(
                '#theme' => 'ding_user_frontend_user_status',
                '#status' => array(
                  'type' => $type,
                  'label' => $label,
                  'count' => $count,
                ),
              );
            }
          }
        }


        $block['subject'] = t('Your user loan status');
        $block['content'] = $content;
      }
      catch (Exception $e) {
        return;
      }
      break;

    case 'ding-user-ajax-login':
      // Build block with login button. It re-uses the form from ding_user
      // comment login, with a new id.
      $render_array = array();
      if (user_is_anonymous()) {
        $form = drupal_get_form('ding_user_comment_forbidden_form');
        $form['#attributes']['id'] = 'ding-user-ajax-login-form';
        $render_array['#markup'] = drupal_render($form);
      }

      $block['content'] = $render_array;
      break;
  }

  return $block;
}

include_once('ding_user_frontend.features.inc');

